{"remainingRequest":"/home/waji/Devzone/homescanner/client/node_modules/babel-loader/lib/index.js!/home/waji/Devzone/homescanner/client/node_modules/eslint-loader/index.js??ref--13-0!/home/waji/Devzone/homescanner/client/src/components/services/pluginService.js?vue&type=script&lang=js&","dependencies":[{"path":"/home/waji/Devzone/homescanner/client/src/components/services/pluginService.js","mtime":1633989984418},{"path":"/home/waji/Devzone/homescanner/client/node_modules/cache-loader/dist/cjs.js","mtime":1633968883538},{"path":"/home/waji/Devzone/homescanner/client/node_modules/babel-loader/lib/index.js","mtime":1633968857790},{"path":"/home/waji/Devzone/homescanner/client/node_modules/eslint-loader/index.js","mtime":1633968861038}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvd2FqaS9EZXZ6b25lL2hvbWVzY2FubmVyL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vIETDqWZpbml0aW9uIGQndW4gbm91dmVhdSBjb21wb3NhbnQgYXBwZWzDqSBgYnV0dG9uLWNvdW50ZXJgCi8vaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IEN1c3RvbXMgZnJvbSAiLi9jdXN0b21TZXJ2aWNlLmpzIjsgLy9pbXBvcnQgc3dhbCBmcm9tICJzd2VldGFsZXJ0IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGx1Z2lucycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJJZDogIiIsCiAgICAgIHRyYWZmaWNzOiB7fSwKICAgICAgbWV0ZW86IHt9LAogICAgICB0cmFuc3BvcnRzOiB7fSwKICAgICAgc3BvcnQ6IHt9LAogICAgICBtYXBzOiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFRyYWZmaWM6IGZ1bmN0aW9uIGdldFRyYWZmaWMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwoKICAgICAgICAgICAgICAgIF90aGlzLiRodHRwLnBvc3QoIi9wbHVnaW4vdHJhZmZpYy8iLCB7fSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMudHJhZmZpY3MgPSByZXNwb25zZS5kYXRhLnRyYWZmaWNzOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbnVsbCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA1OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICAvKmxldCBlcnJvciA9IGVyci5yZXNwb25zZTsKICAgICAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXMgPT0gNTAwKSB7CiAgICAgICAgICAgICAgICBzd2FsKCJFcnJvciIsIGVycm9yLmRhdGEubWVzc2FnZSwgImVycm9yIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgc3dhbCgiRXJyb3IiLCBlcnJvci5kYXRhLmVyci5tZXNzYWdlLCAiZXJyb3IiKTsKICAgICAgICAgICAgICAgIH0qLwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDVdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldE1ldGVvOiBmdW5jdGlvbiBnZXRNZXRlbygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwoKICAgICAgICAgICAgICAgIF90aGlzMi4kaHR0cC5wb3N0KCIvcGx1Z2luL21ldGVvLyIsIHt9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBfdGhpczIubWV0ZW8gPSByZXNwb25zZS5kYXRhLm1ldGVvOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIG51bGwpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgNV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0VHJhbnNwb3J0OiBmdW5jdGlvbiBnZXRUcmFuc3BvcnQoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKCiAgICAgICAgICAgICAgICBfdGhpczMuJGh0dHAucG9zdCgiL3BsdWdpbi90cmFuc3BvcnQvIiwge30pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMy50cmFuc3BvcnRzID0gcmVzcG9uc2UuZGF0YS50cmFuc3BvcnRzOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIG51bGwpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDU7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDMudDApOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgNV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0U3BvcnQ6IGZ1bmN0aW9uIGdldFNwb3J0KCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CgogICAgICAgICAgICAgICAgX3RoaXM0LiRodHRwLnBvc3QoIi9wbHVnaW4vc3BvcnQvIiwge30pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNC5zcG9ydCA9IHJlc3BvbnNlLmRhdGEuc3BvcnQ7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgbnVsbCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gNTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NC50MCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1swLCA1XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRNYXBzOiBmdW5jdGlvbiBnZXRNYXBzKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDA7CgogICAgICAgICAgICAgICAgX3RoaXM1LiRodHRwLnBvc3QoIi9wbHVnaW4vbWFwcy8iLCB7fSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgX3RoaXM1Lm1hcHMgPSByZXNwb25zZS5kYXRhLm1hcHM7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgbnVsbCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gNTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NS50MCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSwgbnVsbCwgW1swLCA1XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgdXNlciA9IEN1c3RvbXMuZ2V0VXNlckRldGFpbHMoKTsKICAgIHRoaXMudXNlcklkID0gdXNlci5faWQ7CiAgICB0aGlzLmdldFRyYWZmaWMoKTsKICAgIHRoaXMuZ2V0TWV0ZW8oKTsKICAgIHRoaXMuZ2V0VHJhbnNwb3J0KCk7CiAgICB0aGlzLmdldFNwb3J0KCk7CiAgICB0aGlzLmdldE1hcHMoKTsKICB9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30KfTs="},{"version":3,"sources":["/home/waji/Devzone/homescanner/client/src/components/services/pluginService.js"],"names":["Customs","name","data","userId","traffics","meteo","transports","sport","maps","methods","getTraffic","$http","post","then","response","console","log","getMeteo","getTransport","getSport","getMaps","created","user","getUserDetails","_id","updated","mounted"],"mappings":"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","sourcesContent":["// Définition d'un nouveau composant appelé `button-counter`\n//import axios from \"axios\";\nimport Customs from \"./customService.js\";\n//import swal from \"sweetalert\";\n\n\nexport default {\n    name: 'Plugins',\n\n    data: () => ({\n        userId: \"\",\n        traffics: {},\n        meteo: {},\n        transports: {},\n        sport: {},\n        maps: {}\n    }),\n\n    methods: {\n        async getTraffic() {\n            try {\n                this.$http\n                .post(\"/plugin/traffic/\", {})\n                .then(response => {\n                    this.traffics = response.data.traffics;\n                });\n                return null;\n            }\n            catch(err) {\n                /*let error = err.response;\n                if (error.status == 500) {\n                swal(\"Error\", error.data.message, \"error\");\n                } else {\n                swal(\"Error\", error.data.err.message, \"error\");\n                }*/\n                console.log(err);\n            }\n        },\n        async getMeteo() {\n            try {\n                this.$http\n                .post(\"/plugin/meteo/\", {})\n                .then(response => {\n                    this.meteo = response.data.meteo;\n                });\n                return null;\n            }\n            catch(err) {\n                console.log(err);\n            }\n        },\n        async getTransport() {\n            try {\n                this.$http\n                .post(\"/plugin/transport/\", {})\n                .then(response => {\n                    this.transports = response.data.transports;\n                });\n                return null;\n            }\n            catch(err) {\n                console.log(err);\n            }\n        },\n        async getSport() {\n            try {\n                this.$http\n                .post(\"/plugin/sport/\", {})\n                .then(response => {\n                    this.sport = response.data.sport;\n                });\n                return null;\n            }\n            catch(err) {\n                console.log(err);\n            }\n        },\n        async getMaps() {\n            try {\n                this.$http\n                .post(\"/plugin/maps/\", {})\n                .then(response => {\n                    this.maps = response.data.maps;\n                });\n                return null;\n            }\n            catch(err) {\n                console.log(err);\n            }\n        },\n    },\n\n    created() {\n        let user = Customs.getUserDetails();\n        this.userId = user._id;\n        this.getTraffic();\n        this.getMeteo();\n        this.getTransport();\n        this.getSport();\n        this.getMaps();\n    },\n\n    updated() {\n    },\n\n    mounted() {\n\n    }\n};"]}]}